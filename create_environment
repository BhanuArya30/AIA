import os
import sys
import subprocess

def create_virtualenv(env_name):
    # Create virtual environment
    subprocess.run([sys.executable, '-m', 'venv', env_name])

def activate_virtualenv(env_name):
    activate_script = ''
    if os.name == 'nt':  # For Windows
        activate_script = os.path.join(env_name, 'Scripts', 'activate.bat')
    else:  # For macOS and Linux
        activate_script = os.path.join(env_name, 'bin', 'activate')
    
    print(f"Run the following command to activate the virtual environment:\nsource {activate_script}" if os.name != 'nt' else f"{activate_script}")

def install_dependencies(env_name, requirements_file):
    # Construct the pip install command
    if os.name == 'nt':
        pip_executable = os.path.join(env_name, 'Scripts', 'pip')
    else:
        pip_executable = os.path.join(env_name, 'bin', 'pip')
    
    subprocess.run([pip_executable, 'install', '-r', requirements_file])

def run_ollama_pull():
    try:
        # Execute the shell command
        # result = subprocess.run(['ollama', 'pull', 'phi3'], check=True, capture_output=True, text=True)
        result = subprocess.run(['ollama', 'pull', 'llama3.2-vision'], check=True, capture_output=True, text=True)
        # Print the standard output
        print(result.stdout)
    except subprocess.CalledProcessError as e:
        # Print the standard error if the command fails
        print(f"An error occurred: {e.stderr}")

if __name__ == "__main__":
    env_name = 'aia_venv'
    requirements_file = 'requirements.txt'
    
    create_virtualenv(env_name)
    activate_virtualenv(env_name)
    # After activation, install dependencies
    install_dependencies(env_name, requirements_file)

    run_ollama_pull()
